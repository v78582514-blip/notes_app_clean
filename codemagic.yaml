workflows:
  android_release:
    name: Android Release APK
    max_build_duration: 60
    environment:
      flutter: stable
      xcode: latest

    scripts:
      - name: üîπ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
        script: |
          set -euo pipefail
          echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
          flutter clean
          flutter pub get

      - name: üîπ –°–±–æ—Ä–∫–∞ —Ä–µ–ª–∏–∑–Ω–æ–≥–æ APK
        script: |
          set -euo pipefail
          echo "üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º —Ä–µ–ª–∏–∑ (flutter build apk)..."
          BN=$(date +%s)

          set +e
          flutter build apk --release \
            --build-number="$BN" \
            --build-name="1.0.$BN" \
            --no-shrink -v
          FLUTTER_RC=$?
          set -e

          if [ $FLUTTER_RC -ne 0 ]; then
            echo "‚ö†Ô∏è Flutter build apk –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –æ—à–∏–±–∫–æ–π ($FLUTTER_RC). –ü—Ä–æ–±—É–µ–º —Å–æ–±—Ä–∞—Ç—å gradle-–æ–º —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏..."
            pushd android >/dev/null

            ./gradlew -v || true

            set +e
            ./gradlew :app:assembleRelease --info --stacktrace
            GRADLE_RC=$?
            set -e

            echo "üìÅ build outputs –ø–æ–¥ android/app/build/outputs:"
            ls -R app/build/outputs || true

            echo "üìÅ build outputs –ø–æ–¥ ../build/app/outputs:"
            ls -R ../build/app/outputs || true

            echo "üìÑ Gradle reports (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç):"
            find . -type f -path "*/reports/*" -maxdepth 5 -print || true
            find . -type f -path "*/outputs/*" -maxdepth 5 -name "*.log" -print -exec tail -n +1 {} \; || true

            popd >/dev/null

            if [ $GRADLE_RC -ne 0 ]; then
              echo "‚ùå Gradle —Ç–æ–∂–µ —É–ø–∞–ª (–∫–æ–¥ $GRADLE_RC). –°–º. –ª–æ–≥–∏ –≤—ã—à–µ."
              exit $GRADLE_RC
            fi
          fi

          echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (–∏–ª–∏ —É—Å–ø–µ—à–Ω–æ –ø–æ —Ñ–æ–ª–±—ç–∫—É)."

      - name: üîπ –ü–æ–∏—Å–∫ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ APK
        script: |
          set -euo pipefail
          echo "üîç –ò—â–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ APK..."
          ls -R build/app/outputs || true

          mkdir -p build/publish

          FOUND_LIST_FILE="$(mktemp)"
          # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∏ Flutter/AGP
          ( find build/app/outputs/flutter-apk -type f -name "*release*.apk" -print 2>/dev/null || true ) >> "$FOUND_LIST_FILE"
          ( find build/app/outputs/apk        -type f -name "*release*.apk" -print 2>/dev/null || true ) >> "$FOUND_LIST_FILE"
          # –ü—Ä–æ –∑–∞–ø–∞—Å: –Ω–µ—Ç–∏–ø–∏—á–Ω—ã–µ –ø—É—Ç–∏
          ( find build -maxdepth 3 -type f -path "*/outputs/*" -name "*release*.apk" -print 2>/dev/null || true ) >> "$FOUND_LIST_FILE"

          # –£–¥–∞–ª–∏–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
          sort -u "$FOUND_LIST_FILE" | sed '/^\s*$/d' > "${FOUND_LIST_FILE}.uniq"

          if [ ! -s "${FOUND_LIST_FILE}.uniq" ]; then
            echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ release APK –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø—É—Ç—è—Ö."
            echo "–û—Ç–ª–∞–¥–∫–∞: —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ build/app/outputs:"
            ls -R build/app/outputs || true
            exit 1
          fi

          echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã APK:"
          cat "${FOUND_LIST_FILE}.uniq"

          echo "üì¶ –ö–æ–ø–∏—Ä—É–µ–º APK –≤ build/publish ..."
          while IFS= read -r apk; do
            cp -v "$apk" build/publish/
          done < "${FOUND_LIST_FILE}.uniq"

          echo "üéâ –ì–æ—Ç–æ–≤–æ. –í build/publish –ª–µ–∂–∞—Ç:"
          ls -l build/publish

    artifacts:
      - build/publish/*.apk
      - build/app/outputs/flutter-apk/*.apk
      - build/app/outputs/apk/**/*.apk
      - build/**/outputs/**/*.apk

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "*"
          include: true
          source: true
