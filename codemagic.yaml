workflows:
  android_release:
    name: Android Release APK
    max_build_duration: 60
    environment:
      flutter: stable
      xcode: latest

    scripts:
      - name: 🔹 Подготовка проекта
        script: |
          set -euo pipefail
          echo "🧹 Очистка и установка зависимостей..."
          flutter clean
          flutter pub get

      - name: 🔹 Сборка релизного APK (через Gradle)
        script: |
          set -euo pipefail
          echo "🏗️ Сборка release через Gradle…"
          cd android

          if [ ! -f "./gradlew" ]; then
            echo "⚠️ gradlew не найден. Генерируем Gradle Wrapper…"
            if ! command -v gradle >/dev/null 2>&1; then
              echo "❌ В окружении нет 'gradle'. Это нетипично для Codemagic."
              exit 1
            fi
            gradle wrapper --gradle-version 8.7
          fi

          chmod +x ./gradlew
          ./gradlew -v || true

          # Основная сборка
          ./gradlew :app:assembleRelease --info --stacktrace

          echo "📁 Дерево outputs:"
          ls -R app/build/outputs || true
          cd ..

      - name: 🔹 Поиск и копирование APK
        script: |
          set -euo pipefail
          echo "🔍 Ищем собранные APK…"
          mkdir -p build/publish

          FOUND_LIST_FILE="$(mktemp)"
          ( find android/app/build/outputs/apk -type f -name "*release*.apk" -print 2>/dev/null || true ) >> "$FOUND_LIST_FILE"
          ( find build/app/outputs            -type f -name "*release*.apk" -print 2>/dev/null || true ) >> "$FOUND_LIST_FILE"
          ( find build                        -maxdepth 4 -type f -name "*release*.apk" -print 2>/dev/null || true ) >> "$FOUND_LIST_FILE"

          sort -u "$FOUND_LIST_FILE" | sed '/^\s*$/d' > "${FOUND_LIST_FILE}.uniq"

          if [ ! -s "${FOUND_LIST_FILE}.uniq" ]; then
            echo "❌ Не найдено ни одного release APK."
            echo "🔎 android/app/build/outputs:"
            ls -R android/app/build/outputs || true
            echo "🔎 build/app/outputs:"
            ls -R build/app/outputs || true
            exit 1
          fi

          echo "✅ Найдены APK:"
          cat "${FOUND_LIST_FILE}.uniq"

          echo "📦 Копируем APK в build/publish …"
          while IFS= read -r apk; do
            cp -v "$apk" build/publish/
          done < "${FOUND_LIST_FILE}.uniq"

          echo "🎉 Готово. В build/publish лежат:"
          ls -l build/publish

    artifacts:
      - build/publish/*.apk
      - android/app/build/outputs/apk/**/*.apk
      - build/app/outputs/**/*.apk
      - build/**/outputs/**/*.apk

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "*"
          include: true
          source: true
          
