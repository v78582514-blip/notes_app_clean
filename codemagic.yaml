workflows:
  debug_apk:
    name: Debug APK (resilient, no-heredoc)
    max_build_duration: 60
    environment:
      flutter: stable
      vars:
        APP_NAME: notice_app
        PACKAGE_NAME: com.example.notice_app
    scripts:
      - name: Create/overwrite Flutter project
        script: |
          SAFE_NAME="${APP_NAME// /_}"
          SAFE_NAME="$(echo "$SAFE_NAME" | tr '[:upper:]' '[:lower:]')"
          SAFE_NAME="$(echo "$SAFE_NAME" | sed 's/[^a-z0-9_]/_/g')"
          if [[ "$SAFE_NAME" =~ ^[0-9] ]]; then SAFE_NAME="app_$SAFE_NAME"; fi
          echo "Using project name: $SAFE_NAME"
          flutter create --org "${PACKAGE_NAME}" --project-name "$SAFE_NAME" --overwrite .

      - name: Add main.dart (copy if exists, else minimal fallback via printf)
        script: |
          mkdir -p lib
          if [ -f "$CM_SOURCE_DIR/lib/main.dart" ]; then
            echo "✅ Found lib/main.dart in repo — using it"
            cp -f "$CM_SOURCE_DIR/lib/main.dart" lib/main.dart
          else
            echo "⚠️ No lib/main.dart found. Writing tiny fallback..."
            printf "%s\n" \
              "import 'package:flutter/material.dart';" \
              "void main() => runApp(const MaterialApp(" \
              "  debugShowCheckedModeBanner: false," \
              "  home: Scaffold(body: Center(child: Text('Notice APK ✅')))," \
              "));" \
              > lib/main.dart
          fi

      - name: Install dependencies
        script: |
          # Если в твоём lib/main.dart используется shared_preferences — добавим её.
          # На tiny fallback она не нужна, но команда безопасна.
          flutter pub add shared_preferences || true
          flutter pub get

      - name: Build release APK
        script: flutter build apk --release

    artifacts:
      - build/app/outputs/flutter-apk/**/*.apk
