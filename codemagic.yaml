workflows:
  debug_apk:
    name: Debug APK (notes hard-copy)
    max_build_duration: 60
    environment:
      flutter: stable
      vars:
        APP_NAME: notice_app
        PACKAGE_NAME: com.example.notice_app
    scripts:
      - name: Create Flutter project
        script: |
          set -e
          SAFE_NAME="${APP_NAME// /_}"
          SAFE_NAME="$(echo "$SAFE_NAME" | tr '[:upper:]' '[:lower:]')"
          SAFE_NAME="$(echo "$SAFE_NAME" | sed 's/[^a-z0-9_]/_/g')"
          [[ "$SAFE_NAME" =~ ^[0-9] ]] && SAFE_NAME="app_$SAFE_NAME"
          flutter create --org "${PACKAGE_NAME}" --project-name "$SAFE_NAME" --overwrite .

      - name: Overwrite lib/main.dart from repo root
        script: |
          set -e
          mkdir -p lib
          if [ ! -f "$CM_SOURCE_DIR/main_template.dart" ]; then
            echo "❌ main_template.dart not found in repo root"; exit 1
          fi
          rm -f lib/main.dart
          cp -f "$CM_SOURCE_DIR/main_template.dart" lib/main.dart

          echo "== HEAD of lib/main.dart =="
          sed -n '1,50p' lib/main.dart

          # Проверка: это точно наш код «Заметок», не шаблон-счётчик
          if grep -qi "class NotesApp" lib/main.dart && grep -qi "class NotesHomePage" lib/main.dart; then
            echo "✅ Notes code detected."
          else
            echo "❌ Notes markers not found."; exit 1
          fi
          if grep -qiE "Counter|MyHomePage" lib/main.dart; then
            echo "❌ Counter template strings found."; exit 1
          fi

      - name: Install dependencies
        script: |
          set -e
          flutter pub add shared_preferences || true
          flutter pub get

      - name: Build release APK (force new version)
        script: |
          set -e
          BN=$(date +%s)
          flutter clean
          flutter build apk --release --build-number="$BN" --build-name="1.0.$BN"

    artifacts:
      - build/app/outputs/flutter-apk/**/*.apk
