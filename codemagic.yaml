workflows:
  debug_apk:
    name: Debug APK (strict + diagnostics)
    max_build_duration: 60
    environment:
      flutter: stable
      vars:
        APP_NAME: notice_app
        PACKAGE_NAME: com.example.notice_app
    scripts:
      - name: Create/overwrite Flutter project
        script: |
          SAFE_NAME="${APP_NAME// /_}"
          SAFE_NAME="$(echo "$SAFE_NAME" | tr '[:upper:]' '[:lower:]')"
          SAFE_NAME="$(echo "$SAFE_NAME" | sed 's/[^a-z0-9_]/_/g')"
          if [[ "$SAFE_NAME" =~ ^[0-9] ]]; then SAFE_NAME="app_$SAFE_NAME"; fi
          echo "Using project name: $SAFE_NAME"
          flutter create --org "${PACKAGE_NAME}" --project-name "$SAFE_NAME" --overwrite .

      - name: Diagnostics - show repo tree
        script: |
          echo "== REPO ROOT ($CM_SOURCE_DIR) =="
          ls -lah "$CM_SOURCE_DIR" || true
          echo "== REPO /lib =="
          ls -lah "$CM_SOURCE_DIR/lib" || true

      - name: Use repo main.dart (strict - fail if missing)
        script: |
          mkdir -p lib
          if [ ! -f "$CM_SOURCE_DIR/lib/main.dart" ]; then
            echo "‚ùå lib/main.dart NOT FOUND in repo. Put your file at /lib/main.dart on branch 'main' and try again."
            exit 1
          fi
          cp -f "$CM_SOURCE_DIR/lib/main.dart" lib/main.dart
          echo "== HEAD of lib/main.dart =="
          sed -n '1,120p' lib/main.dart

      - name: Install dependencies
        script: |
          flutter pub add shared_preferences || true
          flutter pub get

      - name: Build release APK
        script: |
          flutter clean
          flutter build apk --release

    artifacts:
      - build/app/outputs/flutter-apk/**/*.apk
