workflows:
  android_release:
    name: Android Release APK
    max_build_duration: 60
    environment:
      flutter: stable
      xcode: latest

    scripts:
      - name: üîπ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
        script: |
          set -euo pipefail
          echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
          flutter clean
          flutter pub get

      - name: üîπ –°–±–æ—Ä–∫–∞ —Ä–µ–ª–∏–∑–Ω–æ–≥–æ APK (–Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Gradle)
        script: |
          set -euo pipefail
          echo "üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º release —á–µ—Ä–µ–∑ Gradle (–±–µ–∑ flutter build apk)‚Ä¶"
          BN=$(date +%s)
          # –û–±–Ω–æ–≤–∏–º –≤–µ—Ä—Å–∏—é –¥–ª—è Android (Gradle –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–µ –∏–∑ local.properties? ‚Äî –Ω–µ—Ç.
          # –ü–æ—ç—Ç–æ–º—É Flutter-–Ω–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω. –ì–ª–∞–≤–Ω–æ–µ ‚Äî —Å–æ–±—Ä–∞—Ç—å assembleRelease)
          pushd android >/dev/null

          # –ü–µ—á–∞—Ç–∞–µ–º –≤–µ—Ä—Å–∏–∏ Gradle/Java –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
          ./gradlew -v || true

          # –°–±–æ—Ä–∫–∞ —Ä–µ–ª–∏–∑–∞
          ./gradlew :app:assembleRelease --info --stacktrace

          echo "üìÅ –î–µ—Ä–µ–≤–æ app/build/outputs:"
          ls -R app/build/outputs || true

          popd >/dev/null

      - name: üîπ –ü–æ–∏—Å–∫ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ APK
        script: |
          set -euo pipefail
          echo "üîç –ò—â–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ APK..."

          mkdir -p build/publish

          # –ò—â–µ–º –≤–æ –≤—Å–µ—Ö —Ç–∏–ø–∏—á–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö:
          # - Gradle outputs (android/app/build/outputs/apk/**)
          # - Flutter outputs (build/app/outputs/**) ‚Äî –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
          FOUND_LIST_FILE="$(mktemp)"
          ( find android/app/build/outputs/apk -type f -name "*release*.apk" -print 2>/dev/null || true ) >> "$FOUND_LIST_FILE"
          ( find build/app/outputs            -type f -name "*release*.apk" -print 2>/dev/null || true ) >> "$FOUND_LIST_FILE"
          ( find build                        -maxdepth 4 -type f -name "*release*.apk" -print 2>/dev/null || true ) >> "$FOUND_LIST_FILE"

          sort -u "$FOUND_LIST_FILE" | sed '/^\s*$/d' > "${FOUND_LIST_FILE}.uniq"

          if [ ! -s "${FOUND_LIST_FILE}.uniq" ]; then
            echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ release APK."
            echo "üîé –û—Ç–ª–∞–¥–∫–∞: android/app/build/outputs —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:"
            ls -R android/app/build/outputs || true
            echo "üîé –û—Ç–ª–∞–¥–∫–∞: build/app/outputs —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:"
            ls -R build/app/outputs || true
            exit 1
          fi

          echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã APK:"
          cat "${FOUND_LIST_FILE}.uniq"

          echo "üì¶ –ö–æ–ø–∏—Ä—É–µ–º APK –≤ build/publish ..."
          while IFS= read -r apk; do
            cp -v "$apk" build/publish/
          done < "${FOUND_LIST_FILE}.uniq"

          echo "üéâ –ì–æ—Ç–æ–≤–æ. –í build/publish –ª–µ–∂–∞—Ç:"
          ls -l build/publish

    artifacts:
      - build/publish/*.apk
      - android/app/build/outputs/apk/**/*.apk
      - build/app/outputs/**/*.apk
      - build/**/outputs/**/*.apk

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "*"
          include: true
          source: true
          
