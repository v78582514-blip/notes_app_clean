name: üì¶ Build & Sign Android APK (resilient)

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

concurrency:
  group: android-apk-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      FLUTTER_VERSION: "3.24.0"
      JAVA_VERSION: "17"

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: ‚òï Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: üê¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: üì¶ Pub get
        run: flutter pub get

      # –ü–æ–¥—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞: –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º compileSdk=36 –∏ minSdk=23
      - name: üîß Force compileSdk(36) & minSdk(23)
        run: |
          FILE=android/app/build.gradle
          if [ -f "$FILE" ]; then
            sed -i 's/compileSdk\s*=\s*[0-9]\+/compileSdk = 36/g' "$FILE" || true
            sed -i 's/compileSdkVersion\s\+[0-9]\+/compileSdkVersion 36/g' "$FILE" || true
            sed -i 's/minSdk\s*=\s*[0-9]\+/minSdk = 23/g' "$FILE" || true
            sed -i 's/minSdkVersion\s\+[0-9]\+/minSdkVersion 23/g' "$FILE" || true
          fi
          echo "üîé android/app/build.gradle after patch:"
          tail -n +1 android/app/build.gradle | sed -n '1,200p' | sed -n '1,120p' > /dev/null || true

      # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–µ–∫—Ä–µ—Ç—ã ‚Äî –¥–µ–∫–æ–¥–∏—Ä—É–µ–º keystore –∏ –ø–∏—à–µ–º key.properties
      - name: üîê Prepare keystore (if secrets present)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' && secrets.ANDROID_KEY_ALIAS != '' && secrets.ANDROID_KEY_PASSWORD != '' && secrets.ANDROID_KEYSTORE_PASSWORD != '' }}
        run: |
          mkdir -p android/app
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/auto-release.jks
          cat > android/key.properties <<'EOF'
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
          storeFile=auto-release.jks
          EOF
          echo "‚úÖ Keystore prepared: android/app/auto-release.jks"

      - name: üöÄ Build release APK
        run: |
          # –ï—Å–ª–∏ key.properties –Ω–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ —Å–æ–±–µ—Ä—ë–º unsigned (Flutter —Å–∞–º —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç)
          flutter build apk --release --no-shrink

      - name: üóÇÔ∏è List outputs
        run: |
          echo "‚ñ∂ build/app/outputs/flutter-apk"
          ls -lah build/app/outputs/flutter-apk || true
          echo "‚ñ∂ android/app/build/outputs/apk"
          ls -lah android/app/build/outputs/apk || true
          echo "‚ñ∂ android/app/build/outputs"
          ls -lah android/app/build/outputs || true

      - name: üîé Locate APK
        id: locate
        shell: bash
        run: |
          set -e
          APK=""
          # 1) —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É—Ç—å Flutter
          if [ -f build/app/outputs/flutter-apk/app-release.apk ]; then
            APK=build/app/outputs/flutter-apk/app-release.apk
          fi
          # 2) Gradle –ø—É—Ç—å —Ä–µ–ª–∏–∑–Ω–æ–≥–æ APK
          if [ -z "$APK" ] && [ -f android/app/build/outputs/apk/release/app-release.apk ]; then
            APK=android/app/build/outputs/apk/release/app-release.apk
          fi
          # 3) –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∏ –Ω–µ—Ç ‚Äî unsigned
          if [ -z "$APK" ] && [ -f android/app/build/outputs/apk/release/app-release-unsigned.apk ]; then
            APK=android/app/build/outputs/apk/release/app-release-unsigned.apk
          fi
          # 4) –ü–æ–∏—Å–∫ –ø–æ –º–∞—Å–∫–µ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
          if [ -z "$APK" ]; then
            APK=$(find build android -type f -name "app-release*.apk" | head -n 1 || true)
          fi

          if [ -z "$APK" ]; then
            echo "‚ùå APK not found"
            exit 1
          fi

          echo "apk_path=$APK" >> "$GITHUB_OUTPUT"
          echo "‚úÖ Found APK: $APK"

      - name: ‚òÅÔ∏è Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: ${{ steps.locate.outputs.apk_path }}
          if-no-files-found: error
