name: Build & Sign APK (auto-keystore)

on:
  push:
    branches: [ "main", "master", "notes_app_clean" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.vfs.watch=false"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter pub get
        run: |
          flutter clean
          flutter pub get

      - name: Build release APK (unsigned)
        run: |
          flutter build apk --release --no-tree-shake-icons
          ls -R build/app/outputs || true

      # üëâ –ì–ï–ù–ï–†–ò–ú –ö–ï–ô–°–¢–û–† –ü–†–Ø–ú–û –í CI (–±–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö —Å–∞–π—Ç–æ–≤ –∏ –ü–ö)
      - name: Generate temporary keystore
        run: |
          mkdir -p android/app
          keytool -genkeypair \
            -alias androiddebugkey \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -keystore android/app/auto-release.jks \
            -storepass android \
            -keypass android \
            -dname "CN=NoticeApp,O=CI,L=Internet,ST=NA,C=US"
          echo "‚úÖ Keystore created: android/app/auto-release.jks"

      # üëâ –ü–û–î–ü–ò–°–´–í–ê–ï–ú APK (zipalign + apksigner)
      - name: Sign APK
        run: |
          set -euo pipefail
          APK_IN="build/app/outputs/flutter-apk/app-release.apk"
          if [ ! -f "$APK_IN" ]; then
            echo "‚ùå Not found: $APK_IN"
            exit 1
          fi
          SDK_DIR="${ANDROID_SDK_ROOT:-/usr/local/lib/android/sdk}"
          BT_DIR=$(ls -d "$SDK_DIR/build-tools/"* | sort -V | tail -1)
          ZIPALIGN="$BT_DIR/zipalign"
          APKSIGNER="$BT_DIR/apksigner"

          mkdir -p artifacts
          ALIGNED="artifacts/app-release-aligned.apk"
          SIGNED="artifacts/app-release-signed.apk"

          "$ZIPALIGN" -v -p 4 "$APK_IN" "$ALIGNED"
          "$APKSIGNER" sign \
            --ks android/app/auto-release.jks \
            --ks-key-alias androiddebugkey \
            --ks-pass pass:android \
            --key-pass pass:android \
            --out "$SIGNED" \
            "$ALIGNED"

          "$APKSIGNER" verify --verbose "$SIGNED"
          echo "‚úÖ Signed APK: $SIGNED"

      # üëâ –°–æ—Ö—Ä–∞–Ω—è–µ–º keystore –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –º–æ–∂–Ω–æ –±—ã–ª–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ Secrets –∏ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
      - name: Upload keystore artifact (save for future use)
        uses: actions/upload-artifact@v4
        with:
          name: auto-release-keystore
          path: android/app/auto-release.jks

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: notice_app_apk
          path: artifacts/app-release-signed.apk
          if-no-files-found: error
