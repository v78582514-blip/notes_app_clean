name: üì¶ Build Android APK

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

concurrency:
  group: android-apk-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      JAVA_VERSION: "17"
      FLUTTER_VERSION: "3.24.0"
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: ‚òï Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: üê¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: üì¶ flutter pub get
        run: flutter pub get

      - name: üîß Patch compileSdk / minSdk
        run: |
          FILE="android/app/build.gradle"
          if [ -f "$FILE" ]; then
            sed -i 's/compileSdk\s*=\s*[0-9]\+/compileSdk = 36/g' "$FILE" || true
            sed -i 's/compileSdkVersion\s\+[0-9]\+/compileSdkVersion 36/g' "$FILE" || true
            sed -i 's/minSdk\s*=\s*[0-9]\+/minSdk = 23/g' "$FILE" || true
            sed -i 's/minSdkVersion\s\+[0-9]\+/minSdkVersion 23/g' "$FILE" || true
          fi
          echo "OK: compileSdk=36, minSdk=23"

      - name: üîê Prepare keystore (if secrets present)
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          mkdir -p android/app
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/auto-release.jks
          {
            echo "storePassword=$ANDROID_KEYSTORE_PASSWORD"
            echo "keyPassword=$ANDROID_KEY_PASSWORD"
            echo "keyAlias=$ANDROID_KEY_ALIAS"
            echo "storeFile=auto-release.jks"
          } > android/key.properties
          echo "Keystore ready"

      - name: üß≠ Create local.properties (SDK/Flutter)
        run: |
          ANDROID_SDK_DIR="${ANDROID_HOME:-$ANDROID_SDK_ROOT}"
          FLUTTER_BIN="$(which flutter)"
          # /opt/hostedtoolcache/flutter/3.24.0-stable/x64/flutter/bin/flutter -> two parents up = flutter root
          FLUTTER_ROOT="$(dirname "$(dirname "$FLUTTER_BIN")")"
          mkdir -p android
          {
            echo "sdk.dir=$ANDROID_SDK_DIR"
            echo "flutter.sdk=$FLUTTER_ROOT"
          } > android/local.properties
          cat android/local.properties

      - name: üöÄ Build APK with Gradle (release)
        working-directory: android
        run: |
          chmod +x ./gradlew
          ./gradlew --no-daemon --stacktrace \
            assembleRelease \
            -Ptarget-platform=android-arm,android-arm64,android-x64 \
            -x lint

      - name: üßæ List outputs for debug
        run: |
          echo "== android/app/build/outputs =="
          ls -R android/app/build/outputs || true
          echo "== build/app/outputs =="
          ls -R build/app/outputs || true

      # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—É—Ç–∏. –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –Ω–æ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –Ω–∞–π–¥—ë—Ç—Å—è.
      - name: ‚òÅÔ∏è Upload APK (flutter-apk)
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-flutter-path
          path: build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: ignore

      - name: ‚òÅÔ∏è Upload APK (gradle-apk)
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-gradle-path
          path: android/app/build/outputs/apk/release/*.apk
          if-no-files-found: error
