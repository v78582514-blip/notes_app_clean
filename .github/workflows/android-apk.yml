name: üì¶ Build & Sign Android APK (resilient)

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

concurrency:
  group: android-apk-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      FLUTTER_VERSION: "3.24.0"
      JAVA_VERSION: "17"

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: ‚òï Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: üê¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: üì¶ Get dependencies
        run: flutter pub get

      - name: üîß Force compileSdk(36) & minSdk(23)
        run: |
          FILE=android/app/build.gradle
          if [ -f "$FILE" ]; then
            sed -i 's/compileSdk\s*=\s*[0-9]\+/compileSdk = 36/g' "$FILE" || true
            sed -i 's/compileSdkVersion\s\+[0-9]\+/compileSdkVersion 36/g' "$FILE" || true
            sed -i 's/minSdk\s*=\s*[0-9]\+/minSdk = 23/g' "$FILE" || true
            sed -i 's/minSdkVersion\s\+[0-9]\+/minSdkVersion 23/g' "$FILE" || true
          fi
          echo "‚úÖ Patched build.gradle to use compileSdk 36"

      - name: üîê Prepare keystore (if secrets present)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          mkdir -p android/app
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/auto-release.jks
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=auto-release.jks" >> android/key.properties
          echo "‚úÖ Keystore and key.properties created"

      - name: üöÄ Build release APK
        run: flutter build apk --release --no-shrink

      - name: üîç Find APK
        id: locate
        run: |
          APK=$(find . -type f -name "app-release*.apk" | head -n 1 || true)
          if [ -z "$APK" ]; then
            echo "‚ùå No APK found!"
            exit 1
          fi
          echo "apk_path=$APK" >> $GITHUB_OUTPUT
          echo "‚úÖ Found: $APK"

      - name: ‚òÅÔ∏è Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: ${{ steps.locate.outputs.apk_path }}
          if-no-files-found: error
