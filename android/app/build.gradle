// android/app/build.gradle  — полный файл

plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    // Плагин Flutter подключается через settings.gradle (includeBuild),
    // но его id должен быть здесь, чтобы подхватились таски.
    id "dev.flutter.flutter-gradle-plugin"
}

// Загружаем параметры подписи из android/key.properties
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.example.notice_app"          // ← при необходимости замени на свой пакет
    compileSdk 36

    defaultConfig {
        applicationId "com.example.notice_app"  // ← при необходимости замени на свой пакет
        minSdk 23                               // Требование Flutter: minSdk ≥ 23
        targetSdk 36

        versionCode 1
        versionName "1.0"

        // Для NDK/CMake предупреждений (если не используешь — можно оставить как есть)
        ndk {
            debugSymbolLevel "NONE"
        }
    }

    // Java/Kotlin 17 (исправляет несоответствие JVM target)
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    // Конфигурация подписи релиза из key.properties
    signingConfigs {
        release {
            // Если key.properties отсутствует — сборка не упадёт, но релиз будет без подписи.
            // Для установки на устройство нужен подписанный APK.
            if (keystorePropertiesFile.exists()) {
                keyAlias keystoreProperties["keyAlias"]
                keyPassword keystoreProperties["keyPassword"]
                storeFile file(keystoreProperties["storeFile"])
                storePassword keystoreProperties["storePassword"]
            }
        }
    }

    buildTypes {
        release {
            // Подписываем, только если есть key.properties
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
            // На этапе настройки сборочного конвейера выключим shrink,
            // чтобы избежать случайных ошибок с ресурсами/обфускацией.
            minifyEnabled false
            shrinkResources false
        }
        debug {
            debuggable true
        }
    }

    // Убираем некоторые лишние META-INF из зависимостей
    packagingOptions {
        resources {
            excludes += ["META-INF/LICENSE*", "META-INF/NOTICE*", "META-INF/*.kotlin_module"]
        }
    }
}

flutter {
    // путь к корню проекта Flutter
    source "../.."
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:2.1.0"
    implementation "com.google.android.material:material:1.12.0"
}
