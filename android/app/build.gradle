plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def keystorePath = file("$rootDir/app/auto-release.jks")
def hasKeystore = keystorePath.exists()

android {
    namespace "com.example.notice_app"
    compileSdk 36

    defaultConfig {
        applicationId "com.example.notice_app"
        minSdk 23
        targetSdk 34
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            // заполняем конфиг подписи только если файл реально есть
            if (hasKeystore) {
                storeFile keystorePath
                storePassword System.getenv("STORE_PASS") ?: ""
                keyAlias System.getenv("KEY_ALIAS") ?: ""
                keyPassword System.getenv("KEY_PASS") ?: ""
            }
        }
    }

    buildTypes {
        release {
            // если keystore есть — подпишем; если нет — просто соберём unsigned
            if (hasKeystore) {
                signingConfig signingConfigs.release
            }
            // не используем шринк, чтобы проще отлавливать ошибки ресурсов
            minifyEnabled false
            shrinkResources false
        }
        debug {
            // отладка как обычно
        }
    }

    buildFeatures {
        buildConfig true
    }

    packagingOptions {
        resources.excludes += [
                'META-INF/LICENSE*',
                'META-INF/AL2.0',
                'META-INF/LGPL2.1'
        ]
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${libs.versions.kotlin.get()}"
}

flutter {
    source "../.."
}
